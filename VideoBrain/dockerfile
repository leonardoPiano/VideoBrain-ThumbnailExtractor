FROM python:3.6-jessie

MAINTAINER Toan <toancong1920@gmail.com>
# https://www.pyimagesearch.com/2015/07/20/install-opencv-3-0-and-python-3-4-on-ubuntu/

RUN apt-get update && \
    apt-get install -y \
    build-essential \
    cmake \
    gfortran \
    git \
    libatlas-base-dev \
    libavcodec-dev \
    libavformat-dev \
    libgtk-3-dev \
    libgtk2.0-dev \
    libjasper-dev \
    libjpeg-dev \
    libpng-dev \
    libpq-dev \
    libswscale-dev \
    libtbb-dev \
    libtbb2 \
    libtiff-dev \
    libv4l-dev \
    libx264-dev \
    libxvidcore-dev \
    pkg-config \
    unzip \
    wget \
    yasm

    RUN pip install numpy

WORKDIR /
ENV OPENCV_VERSION="3.4.0"

RUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip \
  && unzip opencv_contrib.zip \
  && wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \
  && unzip ${OPENCV_VERSION}.zip

RUN mkdir /opencv-${OPENCV_VERSION}/cmake_binary \
  && cd /opencv-${OPENCV_VERSION}/cmake_binary \
  && cmake -DBUILD_TIFF=ON \
    -DBUILD_opencv_java=OFF \
    -DWITH_CUDA=OFF \
    -DENABLE_AVX=ON \
    -DWITH_OPENGL=ON \
    -DWITH_OPENCL=ON \
    -DWITH_IPP=ON \
    -DWITH_TBB=ON \
    -DWITH_EIGEN=ON \
    -DWITH_V4L=ON \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DOPENCV_EXTRA_MODULES_PATH=/opencv_contrib-${OPENCV_VERSION}/modules \
    -DCMAKE_INSTALL_PREFIX=$(python3.6 -c "import sys; print(sys.prefix)") \
    -DPYTHON_EXECUTABLE=$(which python3.6) \
    -DPYTHON_INCLUDE_DIR=$(python3.6 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
    -DPYTHON_PACKAGES_PATH=$(python3.6 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") .. \
  && make install \
  && rm /${OPENCV_VERSION}.zip \
  && rm -r /opencv-${OPENCV_VERSION} \
  && rm /opencv_contrib.zip \
  && rm -r /opencv_contrib-${OPENCV_VERSION}

  #Object classification dependencies & web application
  #Original Yolo porting project: https://github.com/qqwweee/keras-yolo3
#RUN pip3 install numpy scipy scikit-learn pillow tensorflow==1.1.0 pandas h5py opencv-python==3.3.1.11 keras statistics pyyaml pyparsing cycler matplotlib Flask ffmpy pafy youtube-dl

RUN pip install scipy scikit-learn pillow pandas h5py tensorflow keras statistics pyyaml pyparsing cycler matplotlib Flask flask-cors ffmpy pafy youtube-dl

ADD . /object-detection
# Clone project from GIT
#RUN git clone https://.... or git@token....

WORKDIR /object-detection

#ENV PYTHONPATH=$PYTHONPATH:src
#ENV OBJECT_DETECTION_PORT=8084
#EXPOSE $OBJECT_DETECTION_PORT

#ENTRYPOINT ["python3"]
#CMD ["http_processor.py"]
#CMD /bin/bash

#From SHELL 
#Build the image: docker build -t dockerfile .
#Run the container from the image to port 8080: docker run -p 8080:8080 -i -t <image_id> /bin/bash